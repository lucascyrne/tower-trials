const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["js/main-BRzRyVm5.js","js/unknown-BjZws6l5.js","js/unknown-DE60C25c.js","js/unknown-Chho9maJ.js","js/unknown-CgHcGUJm.js","js/unknown-CWUl0966.js","css/main-BJb7bD1I.css"])))=>i.map(i=>d[i]);
import{_ as e}from"./unknown-BjZws6l5.js";import{s as a}from"./main-BRzRyVm5.js";import"./unknown-DE60C25c.js";import"./unknown-Chho9maJ.js";import"./unknown-CgHcGUJm.js";import"./unknown-CWUl0966.js";class r{static floorCache=new Map;static cacheExpiry=new Map;static CACHE_DURATION=3e4;static clearCache(){this.floorCache.clear(),this.cacheExpiry.clear()}static async getFloorData(e){const r=Date.now(),t=this.floorCache.get(e),o=this.cacheExpiry.get(e);if(t&&o&&r<o)return t;try{const{data:r,error:t}=await a.rpc("get_floor_data",{p_floor_number:e});if(t||!r){const a=this.generateBasicFloorData(e);return this.cacheFloor(e,a),a}const o=Array.isArray(r)?r[0]:r,n={floorNumber:o.floor_number||e,type:o.type||"common",isCheckpoint:o.is_checkpoint||!1,minLevel:o.min_level||1,description:o.description||`Andar ${e}`};return this.cacheFloor(e,n),n}catch(n){const a=this.generateBasicFloorData(e);return this.cacheFloor(e,a),a}}static cacheFloor(e,a){const r=Date.now();this.floorCache.set(e,a),this.cacheExpiry.set(e,r+this.CACHE_DURATION)}static generateBasicFloorData(e){let a="common";e%10==0?a="boss":e%5==0&&(a="elite");const r=1===e||e>10&&(e-1)%10==0,t=Math.max(1,Math.floor(e/2));let o="";switch(a){case"boss":o=`Covil do Chefe - Andar ${e}`;break;case"elite":o=`Domínio de Elite - Andar ${e}`;break;default:o=r?`Santuário Seguro - Andar ${e}`:`Corredor Sombrio - Andar ${e}`}return{floorNumber:e,type:a,isCheckpoint:r,minLevel:t,description:o}}static calculateFloorRewards(e,a,r){const t={boss:2.5,elite:1.8,event:1.2,common:1}[r]||1;return{xp:Math.floor(e*t),gold:Math.floor(a*t)}}static async checkForSpecialEvent(e){try{const{data:r,error:t}=await a.rpc("get_special_event_for_floor",{p_floor:e});return t||!r?null:r}catch(r){return null}}static async processSpecialEventInteraction(a){const{currentSpecialEvent:r,player:t}=a;if(!r)return a;let o=t.hp,n=t.mana,c=t.gold,i="";switch(r.type){case"magic_fountain":o=t.max_hp,n=t.max_mana,i="Fonte mágica! HP e Mana restaurados.";break;case"treasure_chest":{const e=Math.floor(50*Math.random())+25;c+=e,i=`Baú do tesouro! Ganhou ${e} de ouro.`;break}case"bonfire":{const e=Math.floor(.5*t.max_hp);o=Math.min(t.max_hp,t.hp+e),i=`Fogueira! Recuperou ${e} HP.`;break}default:i=`Evento ${r.name} processado.`}try{const{MonsterService:r}=await e((async()=>{const{MonsterService:e}=await import("./main-BRzRyVm5.js").then((e=>e.m));return{MonsterService:e}}),__vite__mapDeps([0,1,2,3,4,5,6])),l=await r.getEnemyForFloor(t.floor);if(!l.success||!l.data)throw new Error("Falha ao gerar inimigo após evento");const h=l.data;if(o!==t.hp||n!==t.mana||c!==t.gold)try{const{CharacterService:a}=await e((async()=>{const{CharacterService:e}=await import("./main-BRzRyVm5.js").then((e=>e.h));return{CharacterService:e}}),__vite__mapDeps([0,1,2,3,4,5,6]));o===t.hp&&n===t.mana||await a.updateCharacterHpMana(t.id,o,n),c!==t.gold&&await a.grantSecureGold(t.id,c-t.gold,"event")}catch(s){}return{...a,player:{...t,hp:o,mana:n,gold:c,isPlayerTurn:!0,isDefending:!1},currentEnemy:h,gameMessage:`${i} ${h.name} apareceu!`,currentSpecialEvent:null,mode:"battle",isPlayerTurn:!0}}catch(s){return{...a,player:{...t,hp:o,mana:n,gold:c,isPlayerTurn:!0,isDefending:!1},gameMessage:`${i} Preparando próximo desafio...`,currentSpecialEvent:null,currentEnemy:null,mode:"battle",isPlayerTurn:!0}}}}export{r as FloorService};
